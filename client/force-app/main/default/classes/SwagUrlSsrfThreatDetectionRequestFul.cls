/*
 * securityapi
 * The security APIs help you detect and block security threats.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Request to determine if a URL is an SSRF threat check
 */
public class SwagUrlSsrfThreatDetectionRequestFul implements Swagger.MappedProperties {
    /**
     * URL to validate
     * @return URL
     */
    public String URL { get; set; }

    /**
     * Top level domains that you do not want to allow access to, e.g. mydomain.com - will block all subdomains as well
     * @return blockedDomains
     */
    public List<String> blockedDomains { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'BlockedDomains' => 'blockedDomains'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public SwagUrlSsrfThreatDetectionRequestFul() {
        blockedDomains = new List<String>();
    }

    public static SwagUrlSsrfThreatDetectionRequestFul getExample() {
        SwagUrlSsrfThreatDetectionRequestFul urlSsrfThreatDetectionRequestFull = new SwagUrlSsrfThreatDetectionRequestFul();
        urlSsrfThreatDetectionRequestFull.URL = 'aeiou';
        urlSsrfThreatDetectionRequestFull.blockedDomains = new List<String>{'aeiou'};
        return urlSsrfThreatDetectionRequestFull;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagUrlSsrfThreatDetectionRequestFul) {
            SwagUrlSsrfThreatDetectionRequestFul urlSsrfThreatDetectionRequestFull = (SwagUrlSsrfThreatDetectionRequestFul) obj;
            return this.URL == urlSsrfThreatDetectionRequestFull.URL
                && this.blockedDomains == urlSsrfThreatDetectionRequestFull.blockedDomains;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (URL == null ? 0 : System.hashCode(URL));
        hashCode = (17 * hashCode) + (blockedDomains == null ? 0 : System.hashCode(blockedDomains));
        return hashCode;
    }
}

