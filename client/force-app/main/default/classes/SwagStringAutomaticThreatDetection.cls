/*
 * securityapi
 * The security APIs help you detect and block security threats.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

/**
 * Result of performing an Insecure Deserialization JSON protection operation
 */
public class SwagStringAutomaticThreatDetection implements Swagger.MappedProperties {
    /**
     * True if the operation was successful, false otherwise
     * @return successful
     */
    public Boolean successful { get; set; }

    /**
     * Get cleanResult
     * @return cleanResult
     */
    public Boolean cleanResult { get; set; }

    /**
     * True if the input contained Insecure Deserialization JSON, false otherwise
     * @return containedJsonInsecureDeserializationAttack
     */
    public Boolean containedJsonInsecureDeserializationAttack { get; set; }

    /**
     * True if the input contained XSS attack, false otherwise
     * @return containedXssThreat
     */
    public Boolean containedXssThreat { get; set; }

    /**
     * True if the input contained XXE attack, false otherwise
     * @return containedXxeThreat
     */
    public Boolean containedXxeThreat { get; set; }

    /**
     * True if the input contained SQL Injection attack, false otherwise
     * @return containedSqlInjectionThreat
     */
    public Boolean containedSqlInjectionThreat { get; set; }

    /**
     * True if the input contained an Server-Side Request Forgery (SSRF) URL attack, false otherwise
     * @return containedSsrfThreat
     */
    public Boolean containedSsrfThreat { get; set; }

    /**
     * True if the input string is XML, false otherwise
     * @return isXML
     */
    public Boolean isXML { get; set; }

    /**
     * True if the input string is JSON, false otherwise
     * @return isJSON
     */
    public Boolean isJSON { get; set; }

    /**
     * True if the input string is a URL, false otherwise
     * @return isURL
     */
    public Boolean isURL { get; set; }

    /**
     * Original input string
     * @return originalInput
     */
    public String originalInput { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'Successful' => 'successful',
        'CleanResult' => 'cleanResult',
        'ContainedJsonInsecureDeserializationAttack' => 'containedJsonInsecureDeserializationAttack',
        'ContainedXssThreat' => 'containedXssThreat',
        'ContainedXxeThreat' => 'containedXxeThreat',
        'ContainedSqlInjectionThreat' => 'containedSqlInjectionThreat',
        'ContainedSsrfThreat' => 'containedSsrfThreat',
        'IsXML' => 'isXML',
        'IsJSON' => 'isJSON',
        'IsURL' => 'isURL',
        'OriginalInput' => 'originalInput'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static SwagStringAutomaticThreatDetection getExample() {
        SwagStringAutomaticThreatDetection stringAutomaticThreatDetection = new SwagStringAutomaticThreatDetection();
        stringAutomaticThreatDetection.successful = true;
        stringAutomaticThreatDetection.cleanResult = true;
        stringAutomaticThreatDetection.containedJsonInsecureDeserializationAttack = true;
        stringAutomaticThreatDetection.containedXssThreat = true;
        stringAutomaticThreatDetection.containedXxeThreat = true;
        stringAutomaticThreatDetection.containedSqlInjectionThreat = true;
        stringAutomaticThreatDetection.containedSsrfThreat = true;
        stringAutomaticThreatDetection.isXML = true;
        stringAutomaticThreatDetection.isJSON = true;
        stringAutomaticThreatDetection.isURL = true;
        stringAutomaticThreatDetection.originalInput = 'aeiou';
        return stringAutomaticThreatDetection;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof SwagStringAutomaticThreatDetection) {
            SwagStringAutomaticThreatDetection stringAutomaticThreatDetection = (SwagStringAutomaticThreatDetection) obj;
            return this.successful == stringAutomaticThreatDetection.successful
                && this.cleanResult == stringAutomaticThreatDetection.cleanResult
                && this.containedJsonInsecureDeserializationAttack == stringAutomaticThreatDetection.containedJsonInsecureDeserializationAttack
                && this.containedXssThreat == stringAutomaticThreatDetection.containedXssThreat
                && this.containedXxeThreat == stringAutomaticThreatDetection.containedXxeThreat
                && this.containedSqlInjectionThreat == stringAutomaticThreatDetection.containedSqlInjectionThreat
                && this.containedSsrfThreat == stringAutomaticThreatDetection.containedSsrfThreat
                && this.isXML == stringAutomaticThreatDetection.isXML
                && this.isJSON == stringAutomaticThreatDetection.isJSON
                && this.isURL == stringAutomaticThreatDetection.isURL
                && this.originalInput == stringAutomaticThreatDetection.originalInput;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (successful == null ? 0 : System.hashCode(successful));
        hashCode = (17 * hashCode) + (cleanResult == null ? 0 : System.hashCode(cleanResult));
        hashCode = (17 * hashCode) + (containedJsonInsecureDeserializationAttack == null ? 0 : System.hashCode(containedJsonInsecureDeserializationAttack));
        hashCode = (17 * hashCode) + (containedXssThreat == null ? 0 : System.hashCode(containedXssThreat));
        hashCode = (17 * hashCode) + (containedXxeThreat == null ? 0 : System.hashCode(containedXxeThreat));
        hashCode = (17 * hashCode) + (containedSqlInjectionThreat == null ? 0 : System.hashCode(containedSqlInjectionThreat));
        hashCode = (17 * hashCode) + (containedSsrfThreat == null ? 0 : System.hashCode(containedSsrfThreat));
        hashCode = (17 * hashCode) + (isXML == null ? 0 : System.hashCode(isXML));
        hashCode = (17 * hashCode) + (isJSON == null ? 0 : System.hashCode(isJSON));
        hashCode = (17 * hashCode) + (isURL == null ? 0 : System.hashCode(isURL));
        hashCode = (17 * hashCode) + (originalInput == null ? 0 : System.hashCode(originalInput));
        return hashCode;
    }
}

