/*
 * securityapi
 * The security APIs help you detect and block security threats.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

public class SwagNetworkThreatDetectionApi {
    SwagClient client;

    public SwagNetworkThreatDetectionApi(SwagClient client) {
        this.client = client;
    }

    public SwagNetworkThreatDetectionApi() {
        this.client = new SwagClient();
    }

    public SwagClient getClient() {
        return this.client;
    }

    /**
     * Check a URL for Server-side Request Forgery (SSRF) threats
     * Checks if an input URL is at risk of being an SSRF (Server-side request forgery) threat or attack.
     * @param request Input URL request (required)
     * @return SwagUrlSsrfThreatDetectionResponseFu
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagUrlSsrfThreatDetectionResponseFu networkThreatDetectionDetectSsrfUrl(Map<String, Object> params) {
        client.assertNotNull(params.get('request'), 'request');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagUrlSsrfThreatDetectionResponseFu) client.invoke(
            'POST', '/security/threat-detection/network/url/ssrf/detect',
            (SwagUrlSsrfThreatDetectionRequestFul) params.get('request'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagUrlSsrfThreatDetectionResponseFu.class
        );
    }
    /**
     * Check if IP address is a Bot client threat
     * Check if the input IP address is a Bot, robot, or otherwise a non-user entity.  Leverages real-time signals to check against known high-probability bots..
     * @param value IP address to check, e.g. &quot;55.55.55.55&quot;.  The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagThreatDetectionBotCheckResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagThreatDetectionBotCheckResponse networkThreatDetectionIsBot(Map<String, Object> params) {
        client.assertNotNull(params.get('value'), 'value');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagThreatDetectionBotCheckResponse) client.invoke(
            'POST', '/security/threat-detection/network/ip/is-bot',
            (String) params.get('value'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagThreatDetectionBotCheckResponse.class
        );
    }
    /**
     * Check if IP address is a known threat
     * Check if the input IP address is a known threat IP address.  Checks against known bad IPs, botnets, compromised servers, and other lists of threats.
     * @param value IP address to check, e.g. &quot;55.55.55.55&quot;.  The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagIPThreatDetectionResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagIPThreatDetectionResponse networkThreatDetectionIsThreat(Map<String, Object> params) {
        client.assertNotNull(params.get('value'), 'value');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagIPThreatDetectionResponse) client.invoke(
            'POST', '/security/threat-detection/network/ip/is-threat',
            (String) params.get('value'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagIPThreatDetectionResponse.class
        );
    }
    /**
     * Check if IP address is a Tor node server
     * Check if the input IP address is a Tor exit node server.  Tor servers are a type of privacy-preserving technology that can hide the original IP address who makes a request.
     * @param value IP address to check, e.g. &quot;55.55.55.55&quot;.  The input is a string so be sure to enclose it in double-quotes. (required)
     * @return SwagThreatDetectionTorNodeResponse
     * @throws Swagger.ApiException if fails to make API call
     */
    public SwagThreatDetectionTorNodeResponse networkThreatDetectionIsTorNode(Map<String, Object> params) {
        client.assertNotNull(params.get('value'), 'value');
        List<Swagger.Param> query = new List<Swagger.Param>();
        List<Swagger.Param> form = new List<Swagger.Param>();

        return (SwagThreatDetectionTorNodeResponse) client.invoke(
            'POST', '/security/threat-detection/network/ip/is-tor-node',
            (String) params.get('value'),
            query, form,
            new Map<String, Object>(),
            new Map<String, Object>(),
            new List<String>{ 'application/json' },
            new List<String>{ 'application/json' },
            new List<String> { 'Apikey' },
            SwagThreatDetectionTorNodeResponse.class
        );
    }
}
